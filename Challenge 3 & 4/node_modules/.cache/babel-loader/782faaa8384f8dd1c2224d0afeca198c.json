{"ast":null,"code":"import _defineProperty from \"/home/alta9/Desktop/project1/Challenge-2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/alta9/Desktop/project1/Challenge-2/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import Page from \"./page/page\";\n// import App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport { Component, render } from \"preact\";\nimport { Provider, createStore, connect } from \"unistore/react\";\nconst initialState = {\n  count: 0,\n  secondcount: 0,\n  list: []\n};\nlet store = createStore(initialState);\n\nlet actions = store => ({\n  increment(state) {\n    return {\n      count: state.count + 1\n    };\n  },\n\n  increment2: ({\n    secondcount\n  }) => ({\n    secondcount: secondcount + 1\n  }),\n  addTodo: (state, data) => {\n    return _objectSpread({}, state, {\n      list: [...state.list, data]\n    });\n  }\n});\n\nconst App = connect([\"count\", \"secondcount\", \"list\"], actions)(({\n  count,\n  secondcount,\n  list,\n  addTodo,\n  increment,\n  increment2\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"Count: \", count), React.createElement(\"button\", {\n  onClick: increment,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"Increment\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, \"Second count: \", secondcount), React.createElement(\"button\", {\n  onClick: increment2,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"Increment\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, \"Todo List\"), React.createElement(List, Object.assign({\n  addTodo,\n  list\n}, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}))));\n\nclass List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: \"\"\n    };\n\n    this.onChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          addTodo = _this$props.addTodo,\n          list = _this$props.list;\n    const input = this.state.input;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: () => addTodo(input),\n      action: \"javascript:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), list.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item)));\n  }\n\n}\n\nrender(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n})), document.body);","map":{"version":3,"sources":["/home/alta9/Desktop/project1/Challenge-2/src/index.js"],"names":["Component","render","Provider","createStore","connect","initialState","count","secondcount","list","store","actions","increment","state","increment2","addTodo","data","App","List","input","onChange","event","setState","target","value","props","map","item","document","body"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import Page from \"./page/page\";\n// import App from \"./App\";\n\n// import * as serviceWorker from \"./serviceWorker\";\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport { Component, render } from \"preact\";\nimport { Provider, createStore, connect } from \"unistore/react\";\n\nconst initialState = {\n  count: 0,\n  secondcount: 0,\n  list: []\n};\n\nlet store = createStore(initialState);\n\nlet actions = store => ({\n  increment(state) {\n    return { count: state.count + 1 };\n  },\n\n  increment2: ({ secondcount }) => ({ secondcount: secondcount + 1 }),\n\n  addTodo: (state, data) => {\n    return {\n      ...state,\n      list: [...state.list, data]\n    };\n  }\n});\n\nconst App = connect(\n  [\"count\", \"secondcount\", \"list\"],\n  actions\n)(({ count, secondcount, list, addTodo, increment, increment2 }) => (\n  <div>\n    <p>Count: {count}</p>\n    <button onClick={increment}>Increment</button>\n    <p>Second count: {secondcount}</p>\n    <button onClick={increment2}>Increment</button>\n    <p>Todo List</p>\n    <List {...{ addTodo, list }} />\n  </div>\n));\n\nclass List extends Component {\n  state = {\n    input: \"\"\n  };\n  onChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  render() {\n    const { addTodo, list } = this.props;\n    const { input } = this.state;\n    return (\n      <div>\n        <form onSubmit={() => addTodo(input)} action=\"javascript:\">\n          <input type=\"text\" onChange={this.onChange} />\n        </form>\n        {list.map(item => (\n          <li>{item}</li>\n        ))}\n      </div>\n    );\n  }\n}\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.body\n);\n"]},"metadata":{},"sourceType":"module"}